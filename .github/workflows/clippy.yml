on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: Clippy

env:
  CARGO_TERM_COLOR: "always"
  RUSTFLAGS: "-D warnings"
  RUST_VERSION: 1.85.0
  RUST_NIGHTLY_VERSION: "nightly-2024-12-20"

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout compact_str

      - name: Install toolchain
        run: |
          rustup toolchain install ${{ env.RUST_VERSION }} --no-self-update --profile minimal --component rustfmt
          rustup override set ${{ env.RUST_VERSION }}

      - name: Run rustfmt Workspace
        run: cargo fmt --all -- --check
      - name: Run rustfmt compact_str
        run: cargo fmt --all --manifest-path compact_str/Cargo.toml -- --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout compact_str

      - name: Install toolchain
        run: |
          rustup toolchain install ${{ env.RUST_VERSION }} --no-self-update --profile minimal --component clippy
          rustup override set ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy Workspace
        run: cargo clippy --no-deps --tests --all-features

      - name: Run clippy compact_str
        run: cargo clippy --no-deps --tests --all-features --manifest-path compact_str/Cargo.toml

  doc:
    name: cargo doc
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings --cfg docsrs"
    steps:
      - uses: actions/checkout@v4
        name: Checkout compact_str

      - name: Install toolchain
        run: |
          rustup toolchain install ${{ env.RUST_NIGHTLY_VERSION }} --no-self-update --profile minimal
          rustup override set ${{ env.RUST_NIGHTLY_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - name: Run rustdoc
        run: cargo doc --all-features --no-deps --manifest-path compact_str/Cargo.toml
