[package]
name = "compact_str"
description = "A memory efficient immutable string type that transparently stores strings on the stack, when possible"
version = "0.2.0"
authors = ["Parker Timmerman <parker@parkertimmerman.com>"]
edition = "2018"
license = "MIT"
homepage = "https://github.com/ParkMyCar/compact_str"
repository = "https://github.com/ParkMyCar/compact_str"
readme = "../README.md"
keywords = ["string", "compact", "memory", "efficient", "immutable"]
categories = ["encoding", "parsing", "memory-management", "text-processing"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bytes = { version = "1", optional = true }
pb-jelly = { version = "0.0.11", optional = true }
serde = { version = "1", optional = true }
static_assertions = "1"

[features]
proto = ["bytes", "pb-jelly"]

[dev-dependencies]
criterion = { version = "0.3", features = ["html_reports"] }
proptest = "1"
rand = "0.8"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
smartstring = "0.2"
smol_str = "0.1"
tracing_alloc = { path = "../tracing_alloc" }

[[bench]]
name = "apis"
harness = false

[[bench]]
name = "compact_str"
harness = false

[[bench]]
name = "comparison"
harness = false
