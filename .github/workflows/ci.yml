on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: CI

env:
  RUSTFLAGS: "-D warnings"
  PROPTEST_CASES: 10000

jobs:
  check:
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml -- --include-ignored

  test-nightly:
    name: cargo test nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml -- --include-ignored

  miri:
    name: cargo miri test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - name: Run Miri
        run: |
          cargo miri test --all-features --manifest-path=compact_str/Cargo.toml

  build-offline:
    name: cargo build --offline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: cargo build
        run: |
          cd compact_str
          cargo build --offline

  fuzz-creation:
    name: fuzz creation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust and friends
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/install@v0.1
        name: Install cargo-fuzz
        with:
          crate: cargo-fuzz
          version: latest
      - name: Fuzz!
        run: |
          cargo fuzz run --debug-assertions creation -- -max_total_time=120

  fuzz-modify:
    name: fuzz modify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust and friends
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/install@v0.1
        name: Install cargo-fuzz
        with:
          crate: cargo-fuzz
          version: latest
      - name: Fuzz!
        run: |
          cargo fuzz run --debug-assertions modify -- -max_total_time=120

  example-bytes:
    name: example - bytes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --manifest-path examples/bytes/Cargo.toml

  example-serde:
    name: example - serde
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --manifest-path examples/serde/Cargo.toml
