on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: X-Plat

env:
  # local default for proptest is 100
  PROPTEST_CASES: 1000
  RUSTFLAGS: "-D warnings"
  MIRIFAGS: "-Zmiri-tag-raw-pointers -Zmiri-check-number-validity"

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-windows-v2
      - uses: actions-rs/install@v0.1
        name: Install cargo-nextest
        with:
          crate: cargo-nextest
          version: latest
      - name: cargo test
        run: |
          cargo nextest run --release --all-features --manifest-path=compact_str/Cargo.toml -- --include-ignored
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml

  macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-macos-v2
      - uses: actions-rs/install@v0.1
        name: Install cargo-nextest
        with:
          crate: cargo-nextest
          version: latest
      - name: cargo test
        run: |
          cargo nextest run --release --all-features --manifest-path=compact_str/Cargo.toml -- --include-ignored
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml

  linux_arm7:
    name: Linux ARMv7
    runs-on: [self-hosted, linux, ARM]
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-arm7-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml

  linux_32bit:
    name: Linux 32-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: nightly
          target: i686-unknown-linux-gnu
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-32bit-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target i686-unknown-linux-gnu
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target i686-unknown-linux-gnu

  linux_mips_32bit:
    name: Linux MIPS Big Endian 32-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: nightly
          target: mips-unknown-linux-gnu
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-mips-32bit-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target mips-unknown-linux-gnu
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target mips-unknown-linux-gnu

  linux_mips_le_32bit:
    name: Linux MIPS Little Endian 32-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: nightly
          target: mipsel-unknown-linux-gnu
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-mips-le-32bit-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target mipsel-unknown-linux-gnu
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target mipsel-unknown-linux-gnu

  linux_powerpc_bit:
    name: Linux PowerPC Big Endian 32-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: nightly
          target: powerpc-unknown-linux-gnu
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-powerpc-32bit-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target powerpc-unknown-linux-gnu
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target powerpc-unknown-linux-gnu

  linux_powerpc_le_64bit:
    name: Linux PowerPC Little Endian 64-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: nightly
          target: powerpc64le-unknown-linux-gnu
          override: true
          components: miri
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.event.repository.name }}-${{ runner.os }}-x-plat-linux-powerpc-le-64bit-v2
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target powerpc64le-unknown-linux-gnu -- --include-ignored
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target powerpc64le-unknown-linux-gnu
