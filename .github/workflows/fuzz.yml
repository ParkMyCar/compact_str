on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'compact_str/**'
      - 'fuzz/**'
      - '.github/workflows/fuzz.yml'
      - '!CHANGELOG.md'
      - '!**/README.md'
  workflow_dispatch:
  schedule:
    - cron: '0 01,13 * * *'

name: Fuzz

env:
  CARGO_TERM_COLOR: "always"
  RUSTFLAGS: "-D warnings -Zrandomize-layout"

jobs:
  libFuzzer_x86_64:
    name: libFuzzer [x86_64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout compact_str
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/install@v0.1
        name: Install cargo-fuzz
        with:
          crate: cargo-fuzz
          version: latest
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}-nightly-fuzz-libfuzzer
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}-nightly-fuzz
            ${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}-nightly
      - name: Set Fuzz Time
        run: |
          if [[ "${{github.event_name}}" == "push" || "${{github.event_name}}" == "pull_request" ]]; then
            echo "fuzz_time=120" >> $GITHUB_ENV
          else
            echo "fuzz_time=1800" >> $GITHUB_ENV
          fi
          echo "${{ env.fuzz_time }}"
      - uses: actions-rs/cargo@v1
        name: Fuzz!
        with:
          command: fuzz
          args: run --features=libfuzzer-sys --debug-assertions compact_str -- -max_total_time=${{ env.fuzz_time }}
      - name: File Issue (if failure found)
        if: failure()
        uses: JasonEtco/create-an-issue@v2.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          update_existing: true
