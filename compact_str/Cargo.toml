[package]
name = "compact_str"
description = "A memory efficient string type that transparently stores strings on the stack, when possible"
version = "0.7.1"
authors = ["Parker Timmerman <parker@parkertimmerman.com>"]
edition = "2021"
license = "MIT"
homepage = "https://github.com/ParkMyCar/compact_str"
repository = "https://github.com/ParkMyCar/compact_str"
readme = "../README.md"
keywords = ["string", "compact", "small", "memory", "mutable"]
categories = ["encoding", "parsing", "memory-management", "text-processing"]

[features]
default = [
    "std",
]
std = []

[dependencies]
arbitrary = { version = "1", optional = true, default-features = false }
bytes = { version = "1", optional = true }
markup = { version = "0.13", optional = true, default-features = false }
proptest = { version = "1", optional = true, default-features = false, features = ["std"] }
quickcheck = { version = "1", optional = true, default-features = false }
rkyv = { version = "0.7", optional = true, default-features = false, features = ["size_32"] }
serde = { version = "1", optional = true }
smallvec = { version = "1", optional = true, features = ["union"] }

# TODO: replace with the below version when castaway is updated on crates.io
castaway = { version = "0.2", default-features = false }
# castaway = { version = "0.2", default-features = false, features = ["alloc"] }

cfg-if = "1"
itoa = "1"
ryu = "1"
static_assertions = "1"

[dev-dependencies]
cfg-if = "1"
proptest = { version = "1.0.*", default-features = false, features = ["std"] }
quickcheck = { version = "1", default-features = false }
quickcheck_macros = "1"
rayon = "1.6.0"
rkyv = { version = "0.7", default-features = false, features = ["alloc", "size_32"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
test-case = "2"
test-strategy = "0.2"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
